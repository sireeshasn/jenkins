pipeline {
    agent any
    
    environment {
        TESTING_ENVIRONMENT = "QA"
        PRODUCTION_ENVIRONMENT = "Sireesha"
    }
    
    stages {
        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                // Integrate with SonarQube for code analysis
                // sonarqube(
                //     serverUrl: 'http://sonarqube.example.com',
                //     credentialsId: 'sonarqube_credentials',
                //     taskId: ''
                // )
            }
        }
        stage('Security Scan') {
            steps {
                // Perform security scan with OWASP ZAP or SonarQube
                // sh 'zap-cli --spider <target_url>'
                // sh 'zap-cli --active-scan <target_url>'
            }
        }
        stage('Deploy to Staging') {
            steps {
                sshagent(['your-ssh-credentials']) {
                    sh 'scp target/app.war ec2-user@staging-instance:/opt/tomcat/webapps'
                }
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                sh 'curl -sSf http://staging-server/health-check'
            }
        }
        stage('Deploy to Production') {
            steps {
                sshagent(['your-ssh-credentials']) {
                    sh 'scp target/app.war ec2-user@production-instance:/opt/tomcat/webapps'
                }
            }
        }
    }
    
    post {
        success {
            emailext (
                to: 'sireesha2622@gmail.com',
                subject: 'Pipeline Success',
                body: "The pipeline has completed successfully in the ${TESTING_ENVIRONMENT} environment."
            )
        }
        failure {
            emailext (
                to: 'sireesha2622@gmail.com',
                subject: 'Pipeline Failure',
                body: "The pipeline has failed in the ${TESTING_ENVIRONMENT} environment. Please investigate."
            )
        }
    }
}
